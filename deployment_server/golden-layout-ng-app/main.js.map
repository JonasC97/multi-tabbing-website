{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/StartDialog.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/base-component.directive.ts","./src/app/routes.ts","./src/dataServices/data.service.ts","./src/dataServices/globalData.service.ts","./src/dataServices/localData.service.ts","./src/docking/DockingComponent.ts","./src/docking/dockingLayout.component.ts","./src/docking/dockingWidgets/empty.component.ts","./src/docking/dockingWidgets/test.component.ts","./src/docking/dockingWidgets/test2.component.ts","./src/docking/dockingWidgets/video.component.ts","./src/docking/services/componentConfig.service.ts","./src/docking/services/docking.service.ts","./src/environments/environment.ts","./src/main.ts","./src/widgets/nav.component.ts"],"sourcesContent":["import {Component} from '@angular/core';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\n\r\n/**\r\n * @title Dialog with header, scrollable content and actions ---\r\n */\r\n@Component({\r\n  selector: 'app-dialog',\r\n  template: `\r\n  <div id=\"instruction-dialog-container\">\r\n  <h2 mat-dialog-title>Bevor sie starten... </h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <h3>Herzlich willkommen zum Prototypen der \"Multi-Tabbing\"-Anwendung.</h3>\r\n  <p>\r\n  Auf der linken Seite finden Sie drei Tabs, welche Unterwasserkameras anzeigen. Auf der rechten Seite im oberen Bereich sind zwei Tabs verfügbar, \r\n  die Ihnen bei der Identifizierung von Tierarten behilflich sein können. Im unteren Bereich befindet sich ein weiterer Tab, der es Ihnen ermöglicht, \r\n  Notizen zu speichern.\r\n</p>\r\n<p>\r\n  Nutzen Sie die Möglichkeit, die Tabs der drei Kameras zu verschieben, um eine optimale Arbeitsumgebung zu schaffen.\r\n</p>\r\n<p>\r\n  Falls Probleme bei der Nutzung auftreten, empfehlen wir Ihnen, die Seite neu zu laden.\r\n</p>\r\n<p>\r\n  Wenn Sie Tierarten identifizieren, haben Sie die Möglichkeit, diese in den Notizen festzuhalten. Wir bitten Sie, im Fragebogen Ihre identifizierten Tierarten anzugeben. \r\n</p>\r\n<p>\r\n  <b>Bitte denken Sie daran, vor dem Schließen der Webseite Ihre Notizen zu kopieren.</b>\r\n</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Ich habe verstanden</button>\r\n</mat-dialog-actions>\r\n  </div>\r\n  `\r\n})\r\nexport class StartDialog {\r\n  constructor() {}\r\n\r\n}\r\n","import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { LayoutConfig, ResolvedLayoutConfig } from 'golden-layout';\r\nimport { DockingLayoutComponent } from 'src/docking/dockingLayout.component';\r\nimport { DockingService } from 'src/docking/services/docking.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { StartDialog } from './StartDialog.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent  implements AfterViewInit {\r\n  title = 'prototype-iq2';\r\n\r\n  @ViewChild('goldenLayoutHost') private _goldenLayoutHostComponent: DockingLayoutComponent; \r\n\r\nconstructor(private dockingService: DockingService, private dialog: MatDialog) {\r\n}\r\nprivate example = {\r\n  \"root\": {\r\n      \"type\": \"row\",\r\n      \"content\": [\r\n          {\r\n              \"type\": \"stack\",\r\n              \"content\": [\r\n                  {\r\n                      \"type\": \"component\",\r\n                      \"content\": [],\r\n                      \"size\": 1,\r\n                      \"sizeUnit\": \"fr\",\r\n                      \"minSizeUnit\": \"px\",\r\n                      \"id\": \"\",\r\n                      \"maximised\": false,\r\n                      \"showPopoutIcon\": false,\r\n                      \"isClosable\": true,\r\n                      \"reorderEnabled\": true,\r\n                      \"title\": \"Pazifik Kamera\",\r\n                      \"componentType\": \"vid\",\r\n                      \"componentState\": {\r\n                          \"id\": \"a7016cf2-c776-61e6-aaf4-c4c11286bf22\"\r\n                      }\r\n                  }\r\n              ],\r\n              \"size\": 15.86497677373964,\r\n              \"sizeUnit\": \"%\",\r\n              \"minSizeUnit\": \"px\",\r\n              \"id\": \"\",\r\n              \"isClosable\": true,\r\n              \"maximised\": false,\r\n              \"activeItemIndex\": 0\r\n          },\r\n          {\r\n              \"type\": \"stack\",\r\n              \"content\": [\r\n                  {\r\n                      \"type\": \"component\",\r\n                      \"content\": [],\r\n                      \"size\": 1,\r\n                      \"sizeUnit\": \"fr\",\r\n                      \"minSizeUnit\": \"px\",\r\n                      \"id\": \"\",\r\n                      \"showPopoutIcon\": false,\r\n                      \"maximised\": false,\r\n                      \"isClosable\": true,\r\n                      \"reorderEnabled\": true,\r\n                      \"title\": \"Cayman Reef Süd Kamera\",\r\n                      \"componentType\": \"vid\",\r\n                      \"componentState\": {\r\n                          \"id\": \"ea74a320-bd21-4c5d-abb6-051281fb6399\"\r\n                      }\r\n                  }\r\n              ],\r\n              \"size\": 16.00353552285527,\r\n              \"sizeUnit\": \"%\",\r\n              \"minSizeUnit\": \"px\",\r\n              \"id\": \"\",\r\n              \"isClosable\": true,\r\n              \"maximised\": false,\r\n              \"activeItemIndex\": 0\r\n          },\r\n          {\r\n              \"type\": \"stack\",\r\n              \"content\": [\r\n                  {\r\n                      \"type\": \"component\",\r\n                      \"content\": [],\r\n                      \"size\": 1,\r\n                      \"sizeUnit\": \"fr\",\r\n                      \"minSizeUnit\": \"px\",\r\n                      \"id\": \"\",\r\n                      \"maximised\": false,\r\n                      \"isClosable\": true,\r\n                      \"reorderEnabled\": true,\r\n                      \"title\": \"Indischer Ozean Kamera\",\r\n                      \"componentType\": \"vid\",\r\n                      \"componentState\": {\r\n                          \"id\": \"8fc80a51-a9e8-561d-9dd8-623339f5a9c7\"\r\n                      }\r\n                  }\r\n              ],\r\n              \"size\": 15.679955418502596,\r\n              \"sizeUnit\": \"%\",\r\n              \"minSizeUnit\": \"px\",\r\n              \"id\": \"\",\r\n              \"isClosable\": true,\r\n              \"maximised\": false,\r\n              \"activeItemIndex\": 0\r\n          },\r\n          {\r\n              \"type\": \"column\",\r\n              \"content\": [\r\n                  {\r\n                      \"type\": \"stack\",\r\n                      \"content\": [\r\n                          {\r\n                              \"type\": \"component\",\r\n                              \"content\": [],\r\n                              \"size\": 1,\r\n                              \"sizeUnit\": \"fr\",\r\n                              \"minSizeUnit\": \"px\",\r\n                              \"id\": \"\",\r\n                              \"showPopoutIcon\": false,\r\n                              \"maximised\": false,\r\n                              \"isClosable\": false,\r\n                              \"reorderEnabled\": false,\r\n                              \"title\": \"Karibische Fische\",\r\n                              \"componentType\": \"test\",\r\n                              \"componentState\": {\r\n                                  \"id\": \"54c26490-390b-1157-1ae5-c52f29acb82d\",\r\n                                  \"componentName\": \"test\",\r\n                                  \"title\": \"my Tab\",\r\n                                  \"componentData\": {\r\n                                      \"myValue\": \"https://www.wikipedia.org\"\r\n                                  }\r\n                              }\r\n                          },\r\n                          {\r\n                              \"type\": \"component\",\r\n                              \"content\": [],\r\n                              \"size\": 1,\r\n                              \"sizeUnit\": \"fr\",\r\n                              \"minSizeUnit\": \"px\",\r\n                              \"id\": \"\",\r\n                              \"maximised\": false,\r\n                              \"isClosable\": false,\r\n                              \"reorderEnabled\": false,\r\n                              \"title\": \"Indischer Ozean Lexikon\",\r\n                              \"componentType\": \"test\",\r\n                              \"componentState\": {\r\n                                  \"id\": \"22be6a6e-d978-c3b6-b63b-b61ece4882c3\",\r\n                                  \"componentName\": \"test\",\r\n                                  \"title\": \"my Tab\",\r\n                                  \"componentData\": {\r\n                                      \"myValue\": \"https://www.wikipedia.org\"\r\n                                  }\r\n                              }\r\n                          }\r\n                      ],\r\n                      \"size\": 50,\r\n                      \"sizeUnit\": \"%\",\r\n                      \"minSizeUnit\": \"px\",\r\n                      \"id\": \"\",\r\n                      \"isClosable\": false,\r\n                      \"maximised\": false,\r\n                      \"activeItemIndex\": 0\r\n                  },\r\n                  {\r\n                      \"type\": \"stack\",\r\n                      \"content\": [\r\n                          {\r\n                              \"type\": \"component\",\r\n                              \"content\": [],\r\n                              \"size\": 1,\r\n                              \"sizeUnit\": \"fr\",\r\n                              \"minSizeUnit\": \"px\",\r\n                              \"id\": \"\",\r\n                              \"maximised\": false,\r\n                              \"isClosable\": false,\r\n                              \"reorderEnabled\": false,\r\n                              \"title\": \"Online Notizblock\",\r\n                              \"componentType\": \"test\",\r\n                              \"componentState\": {\r\n                                  \"id\": \"eea2d6f1-f39a-eb1d-388a-f63af24b8356\",\r\n                                  \"componentName\": \"test\",\r\n                                  \"title\": \"my Tab\",\r\n                                  \"componentData\": {\r\n                                      \"myValue\": \"https://golden-layout.com/\"\r\n                                  }\r\n                              }\r\n                          }\r\n                      ],\r\n                      \"size\": 50,\r\n                      \"sizeUnit\": \"%\",\r\n                      \"minSizeUnit\": \"px\",\r\n                      \"id\": \"\",\r\n                      \"isClosable\": true,\r\n                      \"maximised\": false,\r\n                      \"activeItemIndex\": 0\r\n                  }\r\n              ],\r\n              \"size\": 52.45153228490249,\r\n              \"sizeUnit\": \"%\",\r\n              \"minSizeUnit\": \"px\",\r\n              \"id\": \"\",\r\n              \"isClosable\": true\r\n          }\r\n      ],\r\n      \"size\": 1,\r\n      \"sizeUnit\": \"fr\",\r\n      \"minSizeUnit\": \"px\",\r\n      \"id\": \"\",\r\n      \"isClosable\": true\r\n  },\r\n  \"openPopouts\": [],\r\n  \"settings\": {\r\n      \"constrainDragToContainer\": true,\r\n      \"reorderEnabled\": true,\r\n      \"popoutWholeStack\": false,\r\n      \"blockedPopoutsThrowError\": true,\r\n      \"closePopoutsOnUnload\": true,\r\n      \"responsiveMode\": \"none\",\r\n      \"tabOverlapAllowance\": 0,\r\n      \"reorderOnTabMenuClick\": true,\r\n      \"tabControlOffset\": 10,\r\n      \"popInOnClose\": false\r\n  },\r\n  \"dimensions\": {\r\n      \"borderWidth\": 5,\r\n      \"borderGrabWidth\": 5,\r\n      \"defaultMinItemHeight\": 0,\r\n      \"defaultMinItemHeightUnit\": \"px\",\r\n      \"defaultMinItemWidth\": 10,\r\n      \"defaultMinItemWidthUnit\": \"px\",\r\n      \"headerHeight\": 20,\r\n      \"dragProxyWidth\": 300,\r\n      \"dragProxyHeight\": 200\r\n  },\r\n  \"header\": {\r\n      \"show\": \"top\",\r\n      \"popout\": \"open in new window\",\r\n      \"dock\": \"dock\",\r\n      \"close\": \"close\",\r\n      \"maximise\": \"maximise\",\r\n      \"minimise\": \"minimise\",\r\n      \"tabDropdown\": \"additional tabs\"\r\n  },\r\n  \"resolved\": true\r\n}\r\n\r\n\r\n  ngAfterViewInit() {\r\n    this.openDialog();\r\n\r\n    setTimeout(() => {\r\n      this._goldenLayoutHostComponent.initialise();\r\n      this._goldenLayoutHostComponent.setVirtualActive(false);\r\n      this.dockingService.setCurrentDockingLayout(this._goldenLayoutHostComponent);\r\n      let layout;\r\n      layout = LayoutConfig.fromResolved(this.example as ResolvedLayoutConfig);\r\n      this.dockingService.getCurrentDockingLayout().loadLayout(layout);\r\n      this.dockingService;  \r\n    }, 0);\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(StartDialog);\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n}\r\n","<app-navigation></app-navigation>\r\n<app-golden-layout-host #goldenLayoutHost></app-golden-layout-host>\r\n<div id=\"opaqueOverlay\" style=\"width: 100vw; height: 100vh; position: fixed; top: 0px; left: 0px; background: black; opacity: 0; display: none\"></div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport * as $ from 'jquery';\r\n\r\n\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from '../widgets/nav.component';\r\nimport { DockingLayoutComponent} from '../docking/dockingLayout.component';\r\nimport { appRoutes } from './routes';\r\nimport { TestComponent } from 'src/docking/dockingWidgets/test.component';\r\nimport { from } from 'rxjs';\r\nimport { DockingService } from 'src/docking/services/docking.service';\r\nimport { EmptyComponent } from 'src/docking/dockingWidgets/empty.component';\r\nimport { TestComponent2 } from 'src/docking/dockingWidgets/test2.component';\r\nimport { VideoComponent } from 'src/docking/dockingWidgets/video.component';\r\n\r\n\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { StartDialog } from './StartDialog.component';\r\n\r\n// It is required to have JQuery as global in the window object.\r\nwindow['$'] = $;\r\n\r\n/**\r\n * Define our components.\r\n */\r\nconst COMPONENTS = [\r\n  AppComponent,\r\n  NavComponent,\r\n  TestComponent,\r\n  TestComponent2,\r\n  DockingLayoutComponent,\r\n  EmptyComponent,\r\n  VideoComponent,\r\n  StartDialog\r\n];\r\n\r\n/**\r\n * Is required for golden layout.\r\n * Define here all types that you want to include in the golden layout.\r\n */\r\n// const componentTypes: ComponentType[] = [{\r\n//   name: 'test',\r\n//   type: TestComponent\r\n// },\r\n// {\r\n//   name: 'loading',\r\n//   type: LoadingComponent\r\n// }\r\n// ];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    COMPONENTS\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatProgressSpinnerModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(appRoutes)\r\n    // VgCoreModule,\r\n    // VgControlsModule,\r\n    // VgOverlayPlayModule,\r\n    // VgBufferingModule\r\n  ],\r\n  exports: [ COMPONENTS],\r\n  providers: [DockingService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Directive, InjectionToken } from '@angular/core';\nimport {\n    ComponentContainer\n} from \"golden-layout\";\n  \n@Directive()\nexport abstract class BaseComponentDirective {\n    static componentTypeName;\n    constructor(public rootHtmlElement: HTMLElement) {\n\n    }\n\n    setPositionAndSize(left: number, top: number, width: number, height: number) {\n        this.rootHtmlElement.style.left = this.numberToPixels(left);\n        this.rootHtmlElement.style.top = this.numberToPixels(top);\n        this.rootHtmlElement.style.width = this.numberToPixels(width);\n        this.rootHtmlElement.style.height = this.numberToPixels(height);\n    } \n\n    setVisibility(visible: boolean) {\n        if (visible) {\n            this.rootHtmlElement.style.display = '';\n        } else {\n            this.rootHtmlElement.style.display = 'none';\n        }\n    }\n\n    setZIndex(value: string) {\n        this.rootHtmlElement.style.zIndex = value;\n    }\n\n    private numberToPixels(value: number): string {\n        return value.toString(10) + 'px';\n    }\n}\n\nexport namespace BaseComponentDirective {\n    const GoldenLayoutContainerTokenName = 'GoldenLayoutContainer'; \n    export const GoldenLayoutContainerInjectionToken = new InjectionToken<ComponentContainer>(GoldenLayoutContainerTokenName);\n}","import { Routes } from '@angular/router';\r\nimport { DockingLayoutComponent} from '../docking/dockingLayout.component';\r\n\r\n/**\r\n * Angular Routes\r\n */\r\nexport const appRoutes: Routes = [\r\n  { path: 'dashboard', component: DockingLayoutComponent },\r\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full', data: {id: 'Main'} },\r\n];\r\n","import { Injectable} from '@angular/core';\r\nimport { DockingLayoutComponent } from '../docking/dockingLayout.component';\r\nimport { IDockingLayoutConfig } from '../docking/interfaces/IDockingLayoutConfig';\r\nimport { LocalDataService } from './localData.service';\r\nimport { GlobalDataService } from './globalData.service';\r\nimport { IDockingComponentConfig } from '../docking/interfaces/IDockingComponentConfig';\r\n\r\n/**\r\n * Enum to declare which data service we use.\r\n */\r\nenum DataFlag {\r\n LOCAL = 0,\r\n GLOBAL = 1,\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**\r\n * A service that is responsible for getting data from the right data service.\r\n */\r\nexport class DataService {\r\n\r\n  /**\r\n   * Declare which data service we use.\r\n   */\r\n  public dataFlag: DataFlag;\r\n\r\n  /**\r\n   * The current data service ([[GlobalDataService]] or [[LocalDataService]]).\r\n   */\r\n  public currentDataService;\r\n\r\n  constructor(private localDataService: LocalDataService, private globalDataService: GlobalDataService) {\r\n    // TODO set this in UI\r\n    this.setDataFlag(DataFlag.LOCAL);\r\n  }\r\n\r\n  /**\r\n   * Set [[dataFlag]] and depending on the flag set the correct DataService to [[currentDataService]].\r\n   * @parm myDataFlag the [[DataFlag]].\r\n   */\r\n  public setDataFlag(myDataFlag: DataFlag): void {\r\n    this.dataFlag = myDataFlag;\r\n    if (this.dataFlag === DataFlag.LOCAL) {\r\n      this.currentDataService = this.localDataService;\r\n    } else {\r\n      this.currentDataService = this.globalDataService;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get [[IDockingLayoutConfig]] by Id.\r\n   * Call getLayoutConfigJsonById from [[currentDataService]].\r\n   * @parm myId Id as string.\r\n   * @returns myIDockingLayoutConfig the matching IDockingLayoutConfig.\r\n   */\r\n  getIDockingLayoutConfigById(myId: string): IDockingLayoutConfig {\r\n    const myDockingLayoutJSON = this.currentDataService.getLayoutConfigJsonById(myId);\r\n    const myIDockingLayoutConfig: IDockingLayoutConfig = myDockingLayoutJSON;\r\n    return myIDockingLayoutConfig;\r\n  }\r\n\r\n  /**\r\n   * Get [[IDockingLayoutConfig]] by Title.\r\n   * Call getLayoutConfigJsonByTitle from [[currentDataService]].\r\n   * @parm myTitle title as string.\r\n   * @returns myIDockingLayoutConfig the matching IDockingLayoutConfig\r\n   */\r\n  getIDockingLayoutConfigByTitle(myTitle: string): IDockingLayoutConfig {\r\n    const myDockingLayoutJSON = this.currentDataService.getLayoutConfigJsonByTitle(myTitle);\r\n    const myIDockingLayoutConfig: IDockingLayoutConfig = myDockingLayoutJSON;\r\n    return myIDockingLayoutConfig;\r\n  }\r\n\r\n  /**\r\n   * Save a single [[IDockingLayoutConfig]].\r\n   * Call saveLayoutConfig from [[currentDataService]].\r\n   * @parm myLayoutConfig [[IDockingLayoutConfig]].\r\n   */\r\n  saveIDockingLayoutConfig(myLayoutConfig: IDockingLayoutConfig): void {\r\n    const myDockingLayoutJSON = myLayoutConfig;\r\n    this.currentDataService.saveLayoutConfigJson(myDockingLayoutJSON);\r\n  }\r\n\r\n  /**\r\n   * Get [[IDockingComponentConfig]] by id.\r\n   * Call getComponentConfigJsonByTitle from [[currentDataService]].\r\n   * @parm myId as string.\r\n   * @returns myIDockingComponentConfig the matching IDockingComponentConfig\r\n   */\r\n  getIDockingComponentConfigById(myId: string): IDockingComponentConfig {\r\n    const myDockingComponentJSON = this.currentDataService.getComponentConfigJsonById(myId);\r\n    const myDockingComponentConfig: IDockingComponentConfig = myDockingComponentJSON;\r\n    return myDockingComponentConfig;\r\n  }\r\n\r\n  /**\r\n   * Get DockingComponentName by id.\r\n   * Call getDockingComponentNameById from [[currentDataService]].\r\n   * @parm myId as string.\r\n   * @returns componentName the name of the component we need to add it to golden layout.\r\n   */\r\n  getIDockingComponentNameById(myId: string): string {\r\n    return this.currentDataService.getDockingComponentNameById(myId);\r\n  }\r\n\r\n\r\n  /**\r\n   * Save a single [[IDockingComponentConfig]].\r\n   * Call saveComponentConfigJson from [[currentDataService]].\r\n   * @parm myComponentConfig [[IDockingComponentConfig]].\r\n   */\r\n  saveIDockingComponentConfig(myComponentConfig: IDockingComponentConfig): void {\r\n    const myComponentJSON = myComponentConfig;\r\n    this.currentDataService.saveComponentConfigJson(myComponentJSON);\r\n  }\r\n\r\n  /**\r\n   * Save a single [[IDockingComponentConfig]].\r\n   * Call saveComponentConfigJson from [[currentDataService]].\r\n   * This function returns a promise,\r\n   * so you can be sure that the given IDockingComponentConfig is saved before you continue.\r\n   * @parm myComponentConfig [[IDockingComponentConfig]].\r\n   * @return promise\r\n   */\r\n  saveIDockingComponentConfigAsync(myComponentConfig: IDockingComponentConfig): any {\r\n    const promise = new Promise<void>((resolve, reject) => {\r\n    const myComponentJSON = myComponentConfig;\r\n    this.currentDataService.saveComponentConfigJson(myComponentJSON);\r\n    resolve();\r\n    });\r\n    return promise;\r\n  }\r\n\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport { DockingLayoutComponent } from '../docking/dockingLayout.component';\r\nimport { IDockingLayoutConfig } from '../docking/interfaces/IDockingLayoutConfig';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**\r\n * Service class that is responsible for handling the data flow at global level.\r\n */\r\nexport class GlobalDataService {\r\n\r\n}\r\n","import { Injectable, OnInit} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, from } from 'rxjs';\r\nimport * as dockingComponentsJson from '../assets/dockingComponents.json';\r\nimport * as dockingLayoutsJson from '../assets/dockingLayouts.json';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport * as saveAs from 'file-saver';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**\r\n * Service class that is responsible for handling the data flow at local level.\r\n */\r\nexport class LocalDataService {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  /**\r\n   * Json file which stores the information about every DockingComponent.\r\n   */\r\n  // @ts-ignore\r\n  private componentsJson = dockingComponentsJson.default;\r\n\r\n  /**\r\n   * Json file which stores the information about every LayoutComponent.\r\n   */\r\n  // @ts-ignore\r\n  private layoutsJson = dockingLayoutsJson.default;\r\n\r\n  /**\r\n   * Load a DockingLayoutConfig by Id.\r\n   * @param myId id of the DockingLayout\r\n   * @returns JSON the IDockingLayoutConfig as JSON file\r\n   */\r\n  public getLayoutConfigJsonById(myId: string): any {\r\n    for (const layout of this.layoutsJson) {\r\n      if ( layout.id === myId) {\r\n        return layout;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Load a DockingLayoutConfig by Title.\r\n   * @param myTitle title of the DockingLayout\r\n   * @returns JSON the IDockingLayoutConfig as JSON file\r\n   */\r\n  public getLayoutConfigJsonByTitle(myTitle: string): any {\r\n    for (const layout of this.layoutsJson) {\r\n      if ( layout.title === myTitle) {\r\n        return layout;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Save a DockingLayout.\r\n   * @param myLayout IDockingLayoutConfig as JSON\r\n   */\r\n  public saveLayoutConfigJson(myLayout: any): void {\r\n    for (const index in this.layoutsJson) {\r\n      if ( this.layoutsJson[index].id === myLayout.id) {\r\n          this.layoutsJson[index] = myLayout;\r\n          return;\r\n      }\r\n    }\r\n    this.layoutsJson.push(myLayout);\r\n  }\r\n\r\n  /**\r\n   * Load a DockingComponentConfig by Id.\r\n   * @param myId id of the DockingComponent\r\n   * @returns JSON the IDockingComponentConfig as JSON file\r\n   */\r\n  public getComponentConfigJsonById(myId: string): any {\r\n    for (const component of this.componentsJson) {\r\n      if ( component.id === myId) {\r\n        return component;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Save a DockingComponet.\r\n   * @param myComponent IDockingComponentConfig as JSON\r\n   */\r\n  public saveComponentConfigJson(myComponent: any): void {\r\n    for (const index in this.componentsJson) {\r\n      if ( this.componentsJson[index].id === myComponent.id) {\r\n          this.componentsJson[index] = myComponent;\r\n          return;\r\n      }\r\n    }\r\n    this.componentsJson.push(myComponent);\r\n  }\r\n\r\n  /**\r\n   * get the componentName by Id\r\n   * @param myId id of the DockingComponent\r\n   */\r\n  public getDockingComponentNameById(myId: string): string {\r\n    for (const component of this.componentsJson) {\r\n      if ( component.id === myId) {\r\n        return component.componentName;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Save the IDockingComponentConfig to a JSON file and download it\r\n   */\r\n  public saveComponentConfigsToFile(): void {\r\n    const file = new Blob([JSON.stringify(this.componentsJson)], { type: 'data:text/json;charset=UTF-8' });\r\n    saveAs(file, 'dockingComponents.json');\r\n  }\r\n\r\n  /**\r\n   * Save the IDockingLayoutConfig to a JSON file and download it\r\n   */\r\n  public saveLayoutsConfigsToFile(): void {\r\n    const file = new Blob([JSON.stringify(this.layoutsJson)], { type: 'data:text/json;charset=UTF-8' });\r\n    saveAs(file, 'dockingLayouts.json');\r\n  }\r\n\r\n\r\n}\r\n","\r\nimport { ElementRef, Inject, InjectionToken, Optional } from '@angular/core'; \r\nimport { IDockingComponentConfig } from './interfaces/IDockingComponentConfig';\r\nimport { DataService } from '../dataServices/data.service';\r\nimport GoldenLayout, { ComponentContainer } from 'golden-layout';\r\nimport { BaseComponentDirective } from 'src/app/base-component.directive';\r\n\r\n/**\r\n * An abstract class which represents a component that can be added to [[dockingLayout.component]].\r\n */\r\nexport abstract class DockingComponent{\r\n  static componentTypeName;\r\n  public rootHtmlElement;\r\n  /** An [[IDockingComponentConfig]] that defines all attributes to add this component to the [[dockingLayout.component]].\r\n   * If you want to pass own attributes to your component add them to this componentConfig.componentData\r\n   */\r\n  public componentConfig: IDockingComponentConfig =\r\n  {\r\n    id: '0',\r\n    componentName: 'test',\r\n    title: 'defaultTitle',\r\n    componentData: {}\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param myState GoldenLayoutComponentState, here it saves the id of this component.\r\n   *                Used to pass the id from goldenlayout to this component.\r\n   *                Optional because a DockingComponent dont have to be docked in goldenlayout.\r\n   * @param myContainer GoldenLayoutContainer used to change goldenlayout tab title from this component.\r\n   *                    Optional because a DockingComponent dont have to be docked in goldenlayout.\r\n   * @param myDataService DataService to get the IDockingComponentConfig from the given id.\r\n   */\r\n   constructor(protected myDataService: DataService, @Inject(DockingComponent.GoldenLayoutContainerInjectionToken) protected container: ComponentContainer, elRef: ElementRef) {\r\n    this.rootHtmlElement = elRef.nativeElement;\r\n  }\r\n\r\n  /**\r\n   * Abstract function:\r\n   * Define how the componentConfig sets the attributes in this component.\r\n   * @parm myComponentConfig the [[componentConfig]] we get to initialize this component.\r\n   */\r\n  abstract initInLayout(myComponentConfig: IDockingComponentConfig): void;\r\n\r\n  /**\r\n   * Abstract function:\r\n   * Define how the component returns its componentConfig\r\n   * (it is up to each component how and when it saves its attributes).\r\n   * @returns the [[componentConfig]] of this Component.\r\n   */\r\n  abstract getCurrentComponentConfig(): IDockingComponentConfig;\r\n\r\n  /**\r\n   * Saves the IDockingComponentConfig with the help of the DataService to a local file or webserver.\r\n   */\r\n  saveCurrentComponentConfig(): void {\r\n    this.myDataService.saveIDockingComponentConfig(this.getCurrentComponentConfig());\r\n  }\r\n\r\n  /**\r\n   * Setter for the id in [[componentConfig]].\r\n   */\r\n  setId(myId: string): void {\r\n    this.componentConfig.id = myId;\r\n  }\r\n\r\n  /**\r\n   * Getter for the id in [[componentConfig]].\r\n   */\r\n  getId(): string {\r\n      return this.componentConfig.id;\r\n  }\r\n\r\n  /**\r\n   * Getter for the state passed by goldenlayout.\r\n   */\r\n  getStateFromGoldenLayout(): any {\r\n    //return this.myState;\r\n  }\r\n\r\n  setPositionAndSize(left: number, top: number, width: number, height: number) {\r\n    this.rootHtmlElement.style.left = this.numberToPixels(left);\r\n    this.rootHtmlElement.style.top = this.numberToPixels(top);\r\n    this.rootHtmlElement.style.width = this.numberToPixels(width);\r\n    this.rootHtmlElement.style.height = this.numberToPixels(height);\r\n} \r\n\r\nsetVisibility(visible: boolean) {\r\n    if (visible) {\r\n        this.rootHtmlElement.style.display = '';\r\n    } else {\r\n        this.rootHtmlElement.style.display = 'none';\r\n    }\r\n}\r\n\r\nsetZIndex(value: string) {\r\n    this.rootHtmlElement.style.zIndex = value;\r\n}\r\n\r\nprivate numberToPixels(value: number): string {\r\n    return value.toString(10) + 'px';\r\n}\r\n}\r\n\r\nexport namespace DockingComponent {\r\n  const GoldenLayoutContainerTokenName = 'GoldenLayoutContainer'; \r\n  export const GoldenLayoutContainerInjectionToken = new InjectionToken<ComponentContainer>(GoldenLayoutContainerTokenName);\r\n}\r\n","import { AfterViewInit, ApplicationRef, Component, ComponentRef, ElementRef, EmbeddedViewRef, OnDestroy, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport {\r\n  ComponentContainer, GoldenLayout,\r\n  LayoutConfig,\r\n  LogicalZIndex,\r\n  ResolvedComponentItemConfig,\r\n  ResolvedLayoutConfig\r\n} from \"golden-layout\";\r\nimport { BaseComponentDirective } from 'src/app/base-component.directive';\r\nimport { DockingComponent } from './DockingComponent';\r\nimport { EmptyComponent } from './dockingWidgets/empty.component';\r\nimport { TestComponent } from './dockingWidgets/test.component';\r\nimport { TestComponent2 } from './dockingWidgets/test2.component';\r\nimport { VideoComponent } from './dockingWidgets/video.component';\r\n\r\nimport { DockingService } from './services/docking.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-golden-layout-host',\r\n  template: '<ng-template #componentViewContainer></ng-template>',\r\n  styles: [`\r\n    :host {\r\n      height: 100%;\r\n      width: 100%;\r\n      padding: 0;\r\n      position: relative;\r\n    }\r\n    `,\r\n  ],\r\n})\r\nexport class DockingLayoutComponent implements OnDestroy, AfterViewInit {\r\n  \r\n  private _goldenLayout: GoldenLayout;\r\n  private _goldenLayoutElement: HTMLElement;\r\n  private _virtualActive = true;\r\n  private _viewContainerRefActive = false;\r\n  private _componentRefMap = new Map<ComponentContainer, ComponentRef<DockingComponent>>();\r\n  private _goldenLayoutBoundingClientRect: DOMRect = new DOMRect();\r\n\r\n  private _goldenLayoutBindComponentEventListener =\r\n    (container: ComponentContainer, itemConfig: ResolvedComponentItemConfig) => this.handleBindComponentEvent(container, itemConfig);\r\n  private _goldenLayoutUnbindComponentEventListener =\r\n    (container: ComponentContainer) => this.handleUnbindComponentEvent(container);\r\n\r\n  @ViewChild('componentViewContainer', { read: ViewContainerRef, static: true }) private _componentViewContainerRef: ViewContainerRef;\r\n\r\n  get goldenLayout() { return this._goldenLayout; }\r\n  get virtualActive() { return this._virtualActive; }\r\n  get viewContainerRefActive() { return this._viewContainerRefActive; }\r\n  get isGoldenLayoutSubWindow() { return this._goldenLayout.isSubWindow; }\r\n\r\n  constructor(private _appRef: ApplicationRef,\r\n    private _elRef: ElementRef<HTMLElement>,\r\n    private dockingService: DockingService,\r\n  ) {\r\n    this._goldenLayoutElement = this._elRef.nativeElement;\r\n    this.dockingService.registerComponentType(\"test\", TestComponent);\r\n    this.dockingService.registerComponentType(\"test2\", TestComponent2);\r\n    this.dockingService.registerComponentType(\"Empty\", EmptyComponent);\r\n\r\n    this.dockingService.registerComponentType(\"vid\", VideoComponent);\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._goldenLayout.destroy();\r\n  }\r\n\r\n  initialise() {\r\n    this._goldenLayout = new GoldenLayout(\r\n      this._goldenLayoutElement,\r\n      this._goldenLayoutBindComponentEventListener,\r\n      this._goldenLayoutUnbindComponentEventListener,\r\n    );\r\n    this._goldenLayout.resizeWithContainerAutomatically = true;\r\n    this._goldenLayout.beforeVirtualRectingEvent = (count) => this.handleBeforeVirtualRectingEvent(count);\r\n\r\n    if (this._goldenLayout.isSubWindow) {\r\n      this._goldenLayout.checkAddDefaultPopinButton();\r\n    }\r\n\r\n    console.log(this._goldenLayout.layoutConfig.settings);\r\n  }\r\n\r\n  setVirtualActive(value: boolean) {\r\n    this._goldenLayout.clear();\r\n    this._virtualActive = value;\r\n    if (!this._virtualActive) {\r\n      this._viewContainerRefActive = false;\r\n    }\r\n  }\r\n\r\n  setViewContainerRefActive(value: boolean) {\r\n    this._goldenLayout.clear();\r\n    if (value && !this.virtualActive) {\r\n      throw new Error('ViewContainerRef active only possible if VirtualActive');\r\n    }\r\n    this._viewContainerRefActive = value;\r\n  }\r\n\r\n  setSize(width: number, height: number) {\r\n    this._goldenLayout.setSize(width, height)\r\n  }\r\n\r\n  getComponentRef(container: ComponentContainer) {\r\n    return this._componentRefMap.get(container);\r\n  }\r\n\r\n  private handleBindComponentEvent(container: ComponentContainer, itemConfig: ResolvedComponentItemConfig): ComponentContainer.BindableComponent {\r\n    const componentType = itemConfig.componentType;\r\n    const componentRef = this.dockingService.createComponent(componentType, container);\r\n    const component = componentRef.instance;\r\n\r\n    this._componentRefMap.set(container, componentRef);\r\n\r\n    if (this._virtualActive) {\r\n      container.virtualRectingRequiredEvent = (container, width, height) => this.handleContainerVirtualRectingRequiredEvent(container, width, height);\r\n      container.virtualVisibilityChangeRequiredEvent = (container, visible) => this.handleContainerVisibilityChangeRequiredEvent(container, visible);\r\n      container.virtualZIndexChangeRequiredEvent = (container, logicalZIndex, defaultZIndex) => this.handleContainerVirtualZIndexChangeRequiredEvent(container, logicalZIndex, defaultZIndex);\r\n\r\n      if (this._viewContainerRefActive) {\r\n        this._componentViewContainerRef.insert(componentRef.hostView);\r\n      } else {\r\n        this._appRef.attachView(componentRef.hostView);\r\n        const componentRootElement = component.rootHtmlElement;\r\n        this._goldenLayoutElement.appendChild(componentRootElement);\r\n      }\r\n    } else {\r\n      this._appRef.attachView(componentRef.hostView);\r\n      const domElem = (componentRef.hostView as EmbeddedViewRef<unknown>).rootNodes[0] as HTMLElement;\r\n      container.element.appendChild(domElem);\r\n    }\r\n\r\n    return {\r\n      component,\r\n      virtual: this._virtualActive,\r\n    }\r\n  }\r\n\r\n  private handleUnbindComponentEvent(container: ComponentContainer) {\r\n    const componentRef = this._componentRefMap.get(container);\r\n    if (componentRef === undefined) {\r\n      throw new Error('Could not unbind component. Container not found');\r\n    }\r\n    this._componentRefMap.delete(container);\r\n\r\n    const hostView = componentRef.hostView;\r\n\r\n    if (container.virtual) {\r\n      if (this._viewContainerRefActive) {\r\n        const viewRefIndex = this._componentViewContainerRef.indexOf(hostView);\r\n        if (viewRefIndex < 0) {\r\n          throw new Error('Could not unbind component. ViewRef not found');\r\n        }\r\n        this._componentViewContainerRef.remove(viewRefIndex);\r\n      } else {\r\n        const component = componentRef.instance;\r\n        const componentRootElement = component.rootHtmlElement;\r\n        this._goldenLayoutElement.removeChild(componentRootElement);\r\n        this._appRef.detachView(hostView);\r\n      }\r\n    } else {\r\n      const component = componentRef.instance;\r\n      const componentRootElement = component.rootHtmlElement;\r\n      container.element.removeChild(componentRootElement);\r\n      this._appRef.detachView(hostView);\r\n    }\r\n\r\n    componentRef.destroy();\r\n  }\r\n\r\n  private handleBeforeVirtualRectingEvent(count: number) {\r\n    this._goldenLayoutBoundingClientRect = this._goldenLayoutElement.getBoundingClientRect();\r\n  }\r\n\r\n  private handleContainerVirtualRectingRequiredEvent(container: ComponentContainer, width: number, height: number) {\r\n    const containerBoundingClientRect = container.element.getBoundingClientRect();\r\n    const left = containerBoundingClientRect.left - this._goldenLayoutBoundingClientRect.left;\r\n    const top = containerBoundingClientRect.top - this._goldenLayoutBoundingClientRect.top;\r\n\r\n    const componentRef = this._componentRefMap.get(container);\r\n    if (componentRef === undefined) {\r\n        throw new Error('handleContainerVirtualRectingRequiredEvent: ComponentRef not found');\r\n    }\r\n    const component = componentRef.instance;\r\n    component.setPositionAndSize(left, top, width, height);\r\n  }\r\n\r\n  private handleContainerVisibilityChangeRequiredEvent(container: ComponentContainer, visible: boolean) {\r\n    const componentRef = this._componentRefMap.get(container);\r\n    if (componentRef === undefined) {\r\n        throw new Error('handleContainerVisibilityChangeRequiredEvent: ComponentRef not found');\r\n    }\r\n    const component = componentRef.instance;\r\n    component.setVisibility(visible);\r\n  }\r\n\r\n  private handleContainerVirtualZIndexChangeRequiredEvent(container: ComponentContainer, logicalZIndex: LogicalZIndex, defaultZIndex: string) {\r\n    const componentRef = this._componentRefMap.get(container);\r\n    if (componentRef === undefined) {\r\n        throw new Error('handleContainerVirtualZIndexChangeRequiredEvent: ComponentRef not found');\r\n    }\r\n    const component = componentRef.instance;\r\n    component.setZIndex(defaultZIndex);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n  }\r\n}\r\n","import { Component, Input, Inject, Optional, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { DockingComponent } from 'src/docking/DockingComponent';\r\nimport { IDockingComponentConfig } from 'src/docking/interfaces/IDockingComponentConfig';\r\nimport { DataService } from 'src/dataServices/data.service';\r\nimport GoldenLayout, { ComponentContainer } from 'golden-layout';\r\nimport { BaseComponentDirective } from 'src/app/base-component.directive';\r\n\r\n\r\n@Component({\r\n  selector: 'app-empty',\r\n  template: `\r\n  <!--mat-form-field class=\"example-full-width\">\r\n    <mat-label>Enter a Value</mat-label>\r\n    <input matInput placeholder=\"Some Value\" [(ngModel)]='componentConfig.componentData.myValue'\r\n      [value]= 'componentConfig.componentData.myValue'>\r\n  </mat-form-field-->\r\n  <div style=\" overflow: hidden; width: 100%; height: 100%\">\r\n  <img src='https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500' style=\"position: relative; left: 50%; top: 50%; transform: translate(-50%, -50%)\"/>\r\n</div>\r\n  `\r\n})\r\n\r\n/**\r\n * TestComponent to show functionality. sync\r\n * Extends DcokingComponent so it can be docked in DockingLayoutComponnet.\r\n */\r\nexport class EmptyComponent extends DockingComponent implements AfterViewInit {\r\n\r\n  /**\r\n   * Default initialization.\r\n   * Adds myValue to componentData\r\n   */\r\n  public componentConfig: IDockingComponentConfig = {\r\n      id: '0',\r\n      componentName: 'test',\r\n      title: 'defaultTitle',\r\n      componentData:\r\n        {\r\n          myValue: 'None'\r\n        }\r\n    };\r\n\r\n    \r\n  constructor(protected dataService: DataService, @Inject(BaseComponentDirective.GoldenLayoutContainerInjectionToken) protected container: ComponentContainer, elRef: ElementRef) {\r\n    super(dataService,container, elRef.nativeElement);\r\n    if (this.container.state !== null) {\r\n        // get IDockingComponentConfig by th given id in goldenlayout state\r\n        this.componentConfig = dataService.getIDockingComponentConfigById(container.state[\"id\"].toString());\r\n        // init\r\n        this.initInLayout(this.componentConfig);\r\n        // set title\r\n        //this.container.setTitle(this.componentConfig.title);\r\n      }\r\n    }\r\n\r\n  initInLayout(myComponentConfig: IDockingComponentConfig): void {\r\n     this.componentConfig = myComponentConfig;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n    // this.iframe.nativeElement.style.width = this.container.width + \"px\";\r\n    // this.iframe.nativeElement.style.height = this.container.height + \"px\";\r\n\r\n  }\r\n\r\n  getCurrentComponentConfig(): IDockingComponentConfig {\r\n    return this.componentConfig;\r\n    }\r\n}\r\n\r\n\r\n// export namespace EmptyComponent {\r\n//   export const componentTypeName = 'Empty';\r\n// }\r\n","import { Component, Input, Inject, Optional, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { DockingComponent } from 'src/docking/DockingComponent';\r\nimport { IDockingComponentConfig } from 'src/docking/interfaces/IDockingComponentConfig';\r\nimport { DataService } from 'src/dataServices/data.service';\r\nimport GoldenLayout, { ComponentContainer } from 'golden-layout';\r\nimport { BaseComponentDirective } from 'src/app/base-component.directive';\r\nimport * as $ from \"jquery\";\r\n\r\nwindow[\"$\"] = $\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  template: `\r\n  <!--mat-form-field class=\"example-full-width\">\r\n    <mat-label>Enter a Value</mat-label>\r\n    <input matInput placeholder=\"Some Value\" [(ngModel)]='componentConfig.componentData.myValue'\r\n      [value]= 'componentConfig.componentData.myValue'>\r\n  </mat-form-field-->\r\n  <div style=\"height: 100%; width: 100%\">\r\n    <iframe #iframe height=\"100%\" width=\"100%\"  [attr.disabled]=\"isDisabled\"></iframe>\r\n  </div>`\r\n})\r\n/**\r\n * TestComponent to show functionality.\r\n * Extends DcokingComponent so it can be docked in DockingLayoutComponnet.\r\n */\r\nexport class TestComponent extends DockingComponent  implements AfterViewInit {\r\n\r\n  isDisabled = true;\r\n\r\n\r\n  @ViewChild(\"iframe\", { static: false })\r\n  iframe: ElementRef;\r\n\r\n  /**\r\n   * Default initialization.\r\n   * Adds myValue to componentData\r\n   */\r\n  public componentConfig: IDockingComponentConfig = {\r\n      id: '0',\r\n      componentName: 'test',\r\n      title: 'defaultTitle',\r\n      componentData:\r\n        {\r\n          myValue: 'None'\r\n        }\r\n    };\r\n\r\n    \r\n  constructor(protected dataService: DataService, @Inject(DockingComponent.GoldenLayoutContainerInjectionToken) protected container: ComponentContainer, elRef: ElementRef) {\r\n    super(dataService,container, elRef);\r\n    console.log(this.container);\r\n    if (this.container.state !== null) {\r\n        // get IDockingComponentConfig by th given id in goldenlayout state\r\n        this.componentConfig = dataService.getIDockingComponentConfigById(container.state[\"id\"].toString());\r\n        this.container.setTitle(this.componentConfig.title);\r\n        // init\r\n        this.initInLayout(this.componentConfig);\r\n        // set title\r\n        //this.container.setTitle(this.componentConfig.title);\r\n      }\r\n    }\r\n\r\n  initInLayout(myComponentConfig: IDockingComponentConfig): void {\r\n     this.componentConfig = myComponentConfig;\r\n  }\r\n\r\n  mouseDown: boolean = false;\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n    // Make sure that - as long as the mouse is pressed on the drag handles - the overlay does not get toggled\r\n    $(document.body).on(\"mousedown\", \".lm_drag_handle\", (event) => {\r\n      // console.log(\"Down\");\r\n      this.mouseDown = true;\r\n    })\r\n\r\n    $(document.body).on(\"mouseup\", \".lm_drag_handle\", (event) => {\r\n      // console.log(\"Up\");\r\n      this.mouseDown = false;\r\n    })\r\n\r\n    // Activate the overlay, when entering the drag handles\r\n    $(document.body).on(\"mouseenter\", \".lm_drag_handle\", (event) => {\r\n      if(this.mouseDown === false){\r\n        // console.log(\"Entering\");\r\n        document.getElementById(\"opaqueOverlay\").style.display = \"block\";  \r\n      }\r\n    })\r\n\r\n    // Deactivate the overlay, when leaving the drag handles\r\n    $(document.body).on(\"mouseleave\", \".lm_drag_handle\", (event) => {\r\n      if(this.mouseDown === false){\r\n        // console.log(\"Leaving\");\r\n        document.getElementById(\"opaqueOverlay\").style.display = \"none\";\r\n      }\r\n    })\r\n\r\n    console.log(this.iframe.nativeElement)\r\n    console.log(this.iframe)\r\n    this.iframe.nativeElement.src = this.componentConfig.componentData.myValue\r\n\r\n\r\n    // this.container.on('__all', () => {\r\n    //   const elements = document.querySelectorAll('.lm_drag_handle');\r\n    //   for (let i = 0; i < elements.length; i++) {\r\n    //     const element = elements[i];\r\n    //     // do something with the element\r\n    //     element.addEventListener('mouseenter', (event) => {\r\n    //       // your code here\r\n    //       // console.log(\"hover über drag handle\")\r\n    //       // this.iframe.nativeElement.src = null;\r\n    //       console.log(\"Entering\");\r\n    //       document.getElementById(\"opaqueOverlay\").style.display = \"block\";\r\n    //     });\r\n    //     element.addEventListener('mouseleave', (event) => {\r\n    //       // your code here\r\n    //       // console.log(\"hover über drag handle\")\r\n    //       // this.iframe.nativeElement.src = null;\r\n    //       console.log(\"Leaving\");\r\n    //       document.getElementById(\"opaqueOverlay\").style.display = \"none\";\r\n    //     });\r\n    //   }\r\n    // });\r\n\r\n    // this.container.on('resize', () => {\r\n    //   // console.log(\"RESIZE\");\r\n    //   // // this.iframe.nativeElement.src = this.componentConfig.componentData.myValue;\r\n    //   // document.getElementById(\"opaqueOverlay\").style.display = \"none\";\r\n    // });\r\n\r\n  }\r\n\r\n  getCurrentComponentConfig(): IDockingComponentConfig {\r\n    return this.componentConfig;\r\n    }\r\n}\r\n\r\n\r\n// export namespace TestComponent {\r\n//   export const componentTypeName = 'Test';\r\n// }\r\n","import { Component, Input, Inject, Optional, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { DockingComponent } from 'src/docking/DockingComponent';\r\nimport { IDockingComponentConfig } from 'src/docking/interfaces/IDockingComponentConfig';\r\nimport { DataService } from 'src/dataServices/data.service';\r\nimport GoldenLayout, { ComponentContainer } from 'golden-layout';\r\nimport { BaseComponentDirective } from 'src/app/base-component.directive';\r\nimport { TestComponent } from './test.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-test2',\r\n  template: `\r\n  <!--mat-form-field class=\"example-full-width\">\r\n    <mat-label>Enter a Value</mat-label>\r\n    <input matInput placeholder=\"Some Value\" [(ngModel)]='componentConfig.componentData.myValue'\r\n      [value]= 'componentConfig.componentData.myValue'>\r\n  </mat-form-field-->\r\n  <div style=\"height: 100%; width: 100%\">\r\n    <iframe #iframe height=\"100%\" width=\"100%\"  [attr.disabled]=\"isDisabled\"></iframe>\r\n  </div>`\r\n})\r\n\r\n/**\r\n * TestComponent to show functionality.\r\n * Extends DcokingComponent so it can be docked in DockingLayoutComponnet.\r\n */\r\nexport class TestComponent2 extends TestComponent  implements AfterViewInit {\r\n  isDisabled = true;\r\n\r\n  @ViewChild(\"iframe\", { static: false })\r\n  iframe: ElementRef;\r\n\r\n  /**\r\n   * Default initialization.\r\n   * Adds myValue to componentData\r\n   */\r\n  public componentConfig: IDockingComponentConfig = {\r\n      id: '0',\r\n      componentName: 'test',\r\n      title: 'defaultTitle',\r\n      componentData:\r\n        {\r\n          myValue: 'None'\r\n        }\r\n    };\r\n\r\n    \r\n  constructor(protected dataService: DataService, @Inject(DockingComponent.GoldenLayoutContainerInjectionToken) protected container: ComponentContainer, elRef: ElementRef) {\r\n    super(dataService, container, elRef);\r\n    TestComponent2.componentTypeName = 'test2';\r\n    if (this.container.state !== null) {\r\n        // get IDockingComponentConfig by th given id in goldenlayout state\r\n        this.componentConfig = dataService.getIDockingComponentConfigById(container.state[\"id\"].toString());\r\n        // init\r\n        this.initInLayout(this.componentConfig);\r\n        // set title\r\n        //this.container.setTitle(this.componentConfig.title);\r\n      }\r\n    }\r\n\r\n  initInLayout(myComponentConfig: IDockingComponentConfig): void {\r\n     this.componentConfig = myComponentConfig;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    console.log(this.iframe.nativeElement)\r\n    console.log(this.iframe)\r\n    this.iframe.nativeElement.src = this.componentConfig.componentData.myValue\r\n    this.container.on('__all', () => {\r\n      const elements = document.querySelectorAll('.lm_drag_handle');\r\n      for (let i = 0; i < elements.length; i++) {\r\n        const element = elements[i];\r\n        // do something with the element\r\n        element.addEventListener('mouseover', (event) => {\r\n          // your code here\r\n          console.log(\"hover über drag handle\")\r\n          this.iframe.nativeElement.src = null;\r\n        });\r\n      }\r\n    });\r\n\r\n    this.container.on('resize', () => {\r\n      this.iframe.nativeElement.src = this.componentConfig.componentData.myValue;\r\n    });\r\n\r\n  }\r\n\r\n  getCurrentComponentConfig(): IDockingComponentConfig {\r\n    return this.componentConfig;\r\n    }\r\n}\r\n\r\n\r\n// export namespace TestComponent2 {\r\n//   export const componentTypeName = 'Test2';\r\n// }\r\n","import { Component, Input, Inject, Optional, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { DockingComponent } from 'src/docking/DockingComponent';\r\nimport { IDockingComponentConfig } from 'src/docking/interfaces/IDockingComponentConfig';\r\nimport { DataService } from 'src/dataServices/data.service';\r\nimport GoldenLayout, { ComponentContainer } from 'golden-layout';\r\nimport { BaseComponentDirective } from 'src/app/base-component.directive';\r\nimport * as $ from \"jquery\";\r\nimport { OnDestroy, OnInit } from '@angular/core';\r\nwindow[\"$\"] = $\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-vid',\r\n  template: `\r\n  <!--mat-form-field class=\"example-full-width\">\r\n    <mat-label>Enter a Value</mat-label>\r\n    <input matInput placeholder=\"Some Value\" [(ngModel)]='componentConfig.componentData.myValue'\r\n      [value]= 'componentConfig.componentData.myValue'>\r\n  </mat-form-field-->\r\n  <div style=\"height: 100%; width: 100%\">\r\n  <!-- <vg-player>\r\n    <video [vgMedia]=\"$any(media)\" #media id=\"singleVideo\" preload=\"auto\" controls>\r\n        <source src=\" \" type=\"video/mp4\">\r\n    </video>\r\n</vg-player> -->\r\n<video  style=\"width:100%; height:100%\" [muted]=\"'muted'\" autoplay loop>\r\n\t\t<source src={{this.src}} type=\"video/mp4\" />\r\n\t\tBrowser not supported\r\n\t</video>\r\n \r\n  </div>`\r\n})\r\n/**\r\n * TestComponent to show functionality.\r\n * Extends DcokingComponent so it can be docked in DockingLayoutComponnet.\r\n */\r\nexport class VideoComponent extends DockingComponent  implements AfterViewInit {\r\n\r\npublic src;\r\n\r\n  isDisabled = true;\r\n\r\n\r\n  /**\r\n   * Default initialization.\r\n   * Adds myValue to componentData\r\n   */\r\n  public componentConfig: IDockingComponentConfig = {\r\n      id: '0',\r\n      componentName: 'test',\r\n      title: 'defaultTitle',\r\n      componentData:\r\n        {\r\n          myValue: 'None'\r\n        }\r\n    };\r\n\r\n    \r\n  constructor(protected dataService: DataService, @Inject(DockingComponent.GoldenLayoutContainerInjectionToken) protected container: ComponentContainer, elRef: ElementRef) {\r\n    super(dataService,container, elRef);\r\n    console.log(this.container);\r\n    if (this.container.state !== null) {\r\n        // get IDockingComponentConfig by th given id in goldenlayout state\r\n        this.componentConfig = dataService.getIDockingComponentConfigById(container.state[\"id\"].toString());\r\n        // init\r\n        this.initInLayout(this.componentConfig);\r\n        this.container.setTitle(this.componentConfig.title);\r\n        // set title\r\n        //this.container.setTitle(this.componentConfig.title);\r\n      }\r\n    }\r\n\r\n  initInLayout(myComponentConfig: IDockingComponentConfig): void {\r\n     this.componentConfig = myComponentConfig;\r\n     this.src = this.componentConfig.componentData.myValue\r\n\r\n     console.log(this.container)//.controlsContainer.find( '.lm_popout').hide();\r\n  }\r\n\r\n  mouseDown: boolean = false;\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n    // Make sure that - as long as the mouse is pressed on the drag handles - the overlay does not get toggled\r\n    $(document.body).on(\"mousedown\", \".lm_drag_handle\", (event) => {\r\n      // console.log(\"Down\");\r\n      this.mouseDown = true;\r\n    })\r\n\r\n    $(document.body).on(\"mouseup\", \".lm_drag_handle\", (event) => {\r\n      // console.log(\"Up\");\r\n      this.mouseDown = false;\r\n    })\r\n\r\n    // Activate the overlay, when entering the drag handles\r\n    $(document.body).on(\"mouseenter\", \".lm_drag_handle\", (event) => {\r\n      if(this.mouseDown === false){\r\n        // console.log(\"Entering\");\r\n        document.getElementById(\"opaqueOverlay\").style.display = \"block\";  \r\n      }\r\n    })\r\n\r\n    // Deactivate the overlay, when leaving the drag handles\r\n    $(document.body).on(\"mouseleave\", \".lm_drag_handle\", (event) => {\r\n      if(this.mouseDown === false){\r\n        // console.log(\"Leaving\");\r\n        document.getElementById(\"opaqueOverlay\").style.display = \"none\";\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  getCurrentComponentConfig(): IDockingComponentConfig {\r\n    return this.componentConfig;\r\n    }\r\n\r\n\r\n  // Instantiate a Video.js player OnInit\r\n  ngOnInit() {\r\n    // this.player = videojs(this.videoPlayerRef.nativeElement, this.options, function onPlayerReady() {\r\n    //   console.log('onPlayerReady', this);\r\n    // });\r\n  }\r\n  \r\n    ngOnDestroy() {\r\n\r\n    }\r\n  \r\n}\r\n\r\n\r\n// export namespace TestComponent {\r\n//   export const componentTypeName = 'Test';\r\n// }\r\n","import { Injectable } from '@angular/core';\r\nimport { Guid } from 'guid-typescript';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**\r\n * Service which is responsible for ComponentConfig.\r\n */\r\nexport class ComponentConfigService {\r\n\r\n  /**\r\n   * generate a GUID.\r\n   * @returns a GUID as string.\r\n   */\r\n  generateId(): string {\r\n    return Guid.create().toString();\r\n  }\r\n\r\n}\r\n","import { ComponentFactoryResolver, Injectable, Injector, StaticProvider, Type } from '@angular/core';\r\nimport { DockingLayoutComponent } from '../dockingLayout.component';\r\nimport { IDockingLayoutConfig } from '../interfaces/IDockingLayoutConfig';\r\nimport GoldenLayout, { ComponentContainer, JsonValue } from 'golden-layout';\r\nimport { ComponentConfigService } from './componentConfig.service';\r\nimport { IDockingComponentConfig } from '../interfaces/IDockingComponentConfig';\r\nimport { DataService } from '../../dataServices/data.service';\r\nimport { BaseComponentDirective } from 'src/app/base-component.directive';\r\nimport { DockingComponent } from '../DockingComponent';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * A service that is responsible for interaction with the docking layout.\r\n */\r\nexport class DockingService {\r\n\r\n  /**\r\n   * The current loaded DockingLayoutComponent.\r\n   */\r\n  private currentdockingLayout: DockingLayoutComponent;\r\n\r\n  private _componentTypeMap = new Map<string, Type<DockingComponent>>();\r\n\r\n  constructor( private componentConfigService: ComponentConfigService, private dataService: DataService, private componentFactoryResolver: ComponentFactoryResolver) {\r\n  }\r\n\r\n\r\n  registerComponentType(name: string, componentType: Type<DockingComponent>) {\r\n    this._componentTypeMap.set(name, componentType);\r\n    console.log(this._componentTypeMap);\r\n  }\r\n\r\n  \r\n  createComponent(componentTypeJsonValue: JsonValue, container: ComponentContainer) {\r\n    console.log(componentTypeJsonValue)\r\n    console.log(this._componentTypeMap);\r\n    const componentType = this._componentTypeMap.get(componentTypeJsonValue as string);\r\n    if (componentType === undefined) {\r\n      throw new Error('Unknown component type')\r\n    } else {\r\n      const provider: StaticProvider = { provide: DockingComponent.GoldenLayoutContainerInjectionToken, useValue: container };\r\n      const injector = Injector.create({\r\n        providers: [provider]\r\n      });\r\n      const componentFactoryRef = this.componentFactoryResolver.resolveComponentFactory<DockingComponent>(componentType);\r\n      return componentFactoryRef.create(injector);\r\n    }\r\n  }\r\n\r\n  getRegisteredComponentTypeNames(): string[] {\r\n    const count = this._componentTypeMap.size;\r\n    const result = new Array<string>(count);\r\n    let idx = 0;\r\n    for (let [key, value] of this._componentTypeMap) {\r\n      result[idx++] = key;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Save the given IDockingLayoutConfig with help of DataService.\r\n   */\r\n  saveDockingLayoutConfig(myDockingLayoutConfig: IDockingLayoutConfig): void {\r\n    this.dataService.saveIDockingLayoutConfig(myDockingLayoutConfig);\r\n  }\r\n\r\n  /**\r\n   * Get the IDockingLayoutConfig with the given myId with help of DataService.\r\n   */\r\n  getDockingLayoutConfigById(myId: string): IDockingLayoutConfig {\r\n    return this.dataService.getIDockingLayoutConfigById(myId);\r\n  }\r\n\r\n  /**\r\n   * Get the IDockingLayoutConfig with the given myTitle with help of DataService.\r\n   */\r\n  getDockingLayoutConfigByTitle(myTitle: string): IDockingLayoutConfig {\r\n    return this.dataService.getIDockingLayoutConfigByTitle(myTitle);\r\n  }\r\n\r\n  /**\r\n   * Set the current loaded DockingLayoutComponent.\r\n   */\r\n  setCurrentDockingLayout(myDockingLayout: DockingLayoutComponent): void {\r\n    this.currentdockingLayout = myDockingLayout;\r\n  }\r\n\r\n  /**\r\n   * Get the current loaded DockingLayoutComponent.\r\n   */\r\n  getCurrentDockingLayout(): any {\r\n    return this.currentdockingLayout.goldenLayout;\r\n  }\r\n\r\n  /**\r\n   * Create the [[DockingComponent]] which is defined by myComponentConfig, in the [[currentDockingLayout]].\r\n   * @param myComponentConfig the [[IDockingComponentConfig]] of the DockingComponent we want to create.\r\n   * This function will call the [[saveIDockingComponentConfigAsync]] of [[DataService]].\r\n   * First we save the IDockingComponentConfig with DataService.\r\n   * Then we create an unfilled golden layout container with the Id given in IDockingComponentConfig.\r\n   * The generated DockingComponent will fetch the data transferred from dataservice in the first step to initialize.\r\n   * Step 1: Save data.\r\n   * Step 2: Create empty DockingComponent with Id.\r\n   * Step 3 (In DockingComponent): Get data from step 1.\r\n   */\r\n  createComponentInCurrentDockingLayout(myComponentConfig: IDockingComponentConfig): void {\r\n    // generate new GUID if id is '0'\r\n    if (myComponentConfig.id === '0') {\r\n      myComponentConfig.id = this.componentConfigService.generateId();\r\n    }\r\n    // async call to save data (step 1)\r\n    this.dataService.saveIDockingComponentConfigAsync(myComponentConfig).then(\r\n      // then addComponent in currentDockingLayout with the given id (step 2)\r\n      () => this.getCurrentDockingLayout().newComponent(\"test\",myComponentConfig,\"test-Title\"));//newComponent(myComponentConfig.id, myComponentConfig.componentName));\r\n  }\r\n  /**\r\n   * Load a DockingComponent into the currentDockingLayout.\r\n   * @param myId the Id of the DockingComponent we want to load.\r\n   * @param myComponentName name of the DockingComponent, optional:\r\n   * if not given it will fetch it from DataService.\r\n   * It will only add an empty DockingComponent to the DockingLayout, the DockingComponent will load its data itself.\r\n   */\r\n  loadComponentInCurrentDockingLayout(myId: string, myComponentName: string = 'NoName'): void {\r\n    if (myComponentName === 'NoName') {\r\n      myComponentName = this.dataService.getIDockingComponentNameById(myId);\r\n    }\r\n    let state: any = {};\r\n    state.id = myId;\r\n    //this.getCurrentDockingLayout().addComponent(myId, myComponentName);\r\n    this.getCurrentDockingLayout().newComponent(myComponentName,state, \"\");\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Component } from '@angular/core';\r\nimport { Router, ActivatedRoute, RouterOutlet } from '@angular/router';\r\nimport { DockingService } from 'src/docking/services/docking.service';\r\nimport { IDockingComponentConfig } from 'src/docking/interfaces/IDockingComponentConfig';\r\nimport { LocalDataService } from 'src/dataServices/localData.service';\r\nimport { LayoutConfig, ResolvedLayoutConfig } from 'golden-layout';\r\n@Component({\r\n  selector: 'app-navigation',\r\n  template: ``,\r\n  styles: [` a.menu_links {\r\n            cursor: pointer;\r\n          }`]\r\n})\r\n\r\n\r\n/**\r\n * Only mockup\r\n */\r\nexport class NavComponent {\r\n\r\n  private example ={\r\n    \"root\": {\r\n        \"type\": \"row\",\r\n        \"content\": [\r\n            {\r\n                \"type\": \"stack\",\r\n                \"content\": [\r\n                    {\r\n                        \"type\": \"component\",\r\n                        \"content\": [],\r\n                        \"size\": 1,\r\n                        \"sizeUnit\": \"fr\",\r\n                        \"minSizeUnit\": \"px\",\r\n                        \"id\": \"\",\r\n                        \"maximised\": false,\r\n                        \"isClosable\": true,\r\n                        \"reorderEnabled\": true,\r\n                        \"title\": \"test-Title\",\r\n                        \"componentType\": \"test\",\r\n                        \"componentState\": {\r\n                            \"id\": \"a7016cf2-c776-61e6-aaf4-c4c11286bf22\",\r\n                            \"componentName\": \"test\",\r\n                            \"title\": \"my Tab\",\r\n                            \"componentData\": {\r\n                                \"myValue\": \"https://www.openstreetmap.de/karte/\"\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"size\": 50,\r\n                \"sizeUnit\": \"%\",\r\n                \"minSizeUnit\": \"px\",\r\n                \"id\": \"\",\r\n                \"isClosable\": true,\r\n                \"maximised\": false,\r\n                \"activeItemIndex\": 0\r\n            },\r\n            {\r\n                \"type\": \"stack\",\r\n                \"content\": [\r\n                    {\r\n                        \"type\": \"component\",\r\n                        \"content\": [],\r\n                        \"size\": 1,\r\n                        \"sizeUnit\": \"fr\",\r\n                        \"minSizeUnit\": \"px\",\r\n                        \"id\": \"\",\r\n                        \"maximised\": false,\r\n                        \"isClosable\": true,\r\n                        \"reorderEnabled\": true,\r\n                        \"title\": \"test-Title\",\r\n                        \"componentType\": \"test\",\r\n                        \"componentState\": {\r\n                            \"id\": \"a89de9b1-9432-f338-c113-1c36ba31a2a6\",\r\n                            \"componentName\": \"test\",\r\n                            \"title\": \"my Tab\",\r\n                            \"componentData\": {\r\n                                \"myValue\": \"https://www.openstreetmap.de/karte/\"\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"size\": 50,\r\n                \"sizeUnit\": \"%\",\r\n                \"minSizeUnit\": \"px\",\r\n                \"id\": \"\",\r\n                \"isClosable\": true,\r\n                \"maximised\": false,\r\n                \"activeItemIndex\": 0\r\n            }\r\n        ],\r\n        \"size\": 1,\r\n        \"sizeUnit\": \"fr\",\r\n        \"minSizeUnit\": \"px\",\r\n        \"id\": \"\",\r\n        \"isClosable\": true\r\n    },\r\n    \"openPopouts\": [],\r\n    \"settings\": {\r\n        \"constrainDragToContainer\": true,\r\n        \"reorderEnabled\": true,\r\n        \"popoutWholeStack\": false,\r\n        \"blockedPopoutsThrowError\": true,\r\n        \"closePopoutsOnUnload\": true,\r\n        \"responsiveMode\": \"none\",\r\n        \"tabOverlapAllowance\": 0,\r\n        \"reorderOnTabMenuClick\": true,\r\n        \"tabControlOffset\": 10,\r\n        \"popInOnClose\": false\r\n    },\r\n    \"dimensions\": {\r\n        \"borderWidth\": 5,\r\n        \"borderGrabWidth\": 5,\r\n        \"defaultMinItemHeight\": 0,\r\n        \"defaultMinItemHeightUnit\": \"px\",\r\n        \"defaultMinItemWidth\": 10,\r\n        \"defaultMinItemWidthUnit\": \"px\",\r\n        \"headerHeight\": 20,\r\n        \"dragProxyWidth\": 300,\r\n        \"dragProxyHeight\": 200\r\n    },\r\n    \"header\": {\r\n        \"show\": \"top\",\r\n        \"popout\": \"open in new window\",\r\n        \"dock\": \"dock\",\r\n        \"close\": \"close\",\r\n        \"maximise\": \"maximise\",\r\n        \"minimise\": \"minimise\",\r\n        \"tabDropdown\": \"additional tabs\"\r\n    },\r\n    \"resolved\": true\r\n  }\r\n\r\n  constructor(private router: Router, private dockingService: DockingService, private testService: LocalDataService) {\r\n\r\n  }\r\n\r\n  showSettings(): void {\r\n    this.router.navigate(['settings']);\r\n  }\r\n\r\n  showDashboard(): void {\r\n    this.router.navigate(['dashboard'], { queryParams: { title: 'main' } });\r\n  }\r\n\r\n  addTab(link): void {\r\n    const testComponentConfig: IDockingComponentConfig = {\r\n      id: '0',\r\n      componentName: 'test',\r\n      title: 'my Tab',\r\n      componentData: {\r\n        myValue: link\r\n      }\r\n    };\r\n    this.dockingService.createComponentInCurrentDockingLayout(testComponentConfig);\r\n  }\r\n\r\n  addEmptyTab(): void {\r\n    const testComponentConfig: IDockingComponentConfig = {\r\n      id: '0',\r\n      componentName: 'empty',\r\n      title: 'my Tab',\r\n      componentData: {\r\n      }\r\n    };\r\n    this.dockingService.createComponentInCurrentDockingLayout(testComponentConfig);\r\n  }\r\n\r\n  openTab(): void {\r\n    this.dockingService.loadComponentInCurrentDockingLayout('4711', 'test');\r\n  }\r\n\r\n  saveDockingLayout(): void {\r\n    //this.dockingService.getCurrentDockingLayout().saveDockingLayoutConfig();\r\n    // this.testService.saveComponentConfigsToFile();\r\n    // this.testService.saveLayoutsConfigsToFile();\r\n    //let layout = LayoutConfig.fromResolved(this.dockingService.getCurrentDockingLayout().saveLayout());\r\n    let layout = this.dockingService.getCurrentDockingLayout().saveLayout();\r\n    console.log(layout)\r\n    layout = LayoutConfig.fromResolved(this.example as ResolvedLayoutConfig);\r\n    this.dockingService.getCurrentDockingLayout().loadLayout(layout);\r\n    //console.log(layout.saveLayout());\r\n    //this.dockingService.getCurrentDockingLayout().loadLayout(layout);\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}